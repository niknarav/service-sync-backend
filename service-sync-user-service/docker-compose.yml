services:
  redis:
    image: redis:7.0.12
    ports:
      - "6379:6379"
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  postgres:
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=sync-service-user-db
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CREATE_TOPICS: "user-events:1:1"
      KAFKA_MESSAGE_MAX_BYTES: 10485760
      KAFKA_VALUE_DESERIALIZER: org.springframework.kafka.support.serializer.JsonDeserializer

  user-service:
    build:
      context: ./
      dockerfile: docker/Dockerfile
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: "dev"
    depends_on:
      - redis
      - zookeeper
      - postgres
      - kafka
    restart: unless-stopped

  order-service:
    build:
      context: ./service-sync-order-service
      dockerfile: docker/Dockerfile
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: "dev"
      SPRING_APPLICATION_NAME: order-service
    depends_on:
      - user-service
    restart: unless-stopped

  inventory-service:
    build:
      context: ./inventory-service
      dockerfile: docker/Dockerfile
    ports:
      - "8083:8083"
    environment:
      SPRING_PROFILES_ACTIVE: "dev"
    depends_on:
      - user-service
      - order-service
    restart: unless-stopped

  gateway-service:
    build:
      context: ./service-sync-gateway
      dockerfile: docker/Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: "dev"
    depends_on:
      - user-service
      - order-service
      - inventory-service
    restart: unless-stopped


